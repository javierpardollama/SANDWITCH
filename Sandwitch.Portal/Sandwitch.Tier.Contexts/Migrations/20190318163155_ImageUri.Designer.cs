// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sandwitch.Tier.Contexts.Classes;

namespace Sandwitch.Tier.Contexts.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20190318163155_ImageUri")]
    partial class ImageUri
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034");

            modelBuilder.Entity("Sandwitch.Tier.Entities.Classes.Arenal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("LastModified");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Arenal");
                });

            modelBuilder.Entity("Sandwitch.Tier.Entities.Classes.ArenalPoblacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ArenalId");

                    b.Property<DateTime>("LastModified");

                    b.Property<int>("PoblacionId");

                    b.HasKey("Id");

                    b.HasIndex("ArenalId");

                    b.HasIndex("PoblacionId");

                    b.ToTable("ArenalPoblacion");
                });

            modelBuilder.Entity("Sandwitch.Tier.Entities.Classes.Bandera", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ImageUri")
                        .IsRequired();

                    b.Property<DateTime>("LastModified");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Bandera");
                });

            modelBuilder.Entity("Sandwitch.Tier.Entities.Classes.Historico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ArenalId");

                    b.Property<int>("BanderaId");

                    b.Property<DateTime>("LastModified");

                    b.Property<double>("Temperatura");

                    b.HasKey("Id");

                    b.HasIndex("ArenalId");

                    b.HasIndex("BanderaId");

                    b.ToTable("Historico");
                });

            modelBuilder.Entity("Sandwitch.Tier.Entities.Classes.Poblacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ImageUri")
                        .IsRequired();

                    b.Property<DateTime>("LastModified");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("ProvinciaId");

                    b.HasKey("Id");

                    b.HasIndex("ProvinciaId");

                    b.ToTable("Poblacion");
                });

            modelBuilder.Entity("Sandwitch.Tier.Entities.Classes.Provincia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ImageUri")
                        .IsRequired();

                    b.Property<DateTime>("LastModified");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Provincia");
                });

            modelBuilder.Entity("Sandwitch.Tier.Entities.Classes.ArenalPoblacion", b =>
                {
                    b.HasOne("Sandwitch.Tier.Entities.Classes.Arenal", "Arenal")
                        .WithMany("Poblaciones")
                        .HasForeignKey("ArenalId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sandwitch.Tier.Entities.Classes.Poblacion", "Poblacion")
                        .WithMany("Arenales")
                        .HasForeignKey("PoblacionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sandwitch.Tier.Entities.Classes.Historico", b =>
                {
                    b.HasOne("Sandwitch.Tier.Entities.Classes.Arenal", "Arenal")
                        .WithMany("Historicos")
                        .HasForeignKey("ArenalId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sandwitch.Tier.Entities.Classes.Bandera", "Bandera")
                        .WithMany("Historicos")
                        .HasForeignKey("BanderaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sandwitch.Tier.Entities.Classes.Poblacion", b =>
                {
                    b.HasOne("Sandwitch.Tier.Entities.Classes.Provincia", "Provincia")
                        .WithMany("Poblaciones")
                        .HasForeignKey("ProvinciaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
