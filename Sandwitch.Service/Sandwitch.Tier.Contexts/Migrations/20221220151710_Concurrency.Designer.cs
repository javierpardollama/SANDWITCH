// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sandwitch.Tier.Contexts.Classes;

#nullable disable

namespace Sandwitch.Tier.Contexts.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20221220151710_Concurrency")]
    partial class Concurrency
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.1");

            modelBuilder.Entity("Sandwitch.Tier.Entities.Classes.Arenal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Deleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("BLOB");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("Arenal");
                });

            modelBuilder.Entity("Sandwitch.Tier.Entities.Classes.ArenalPoblacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ArenalId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Deleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<int>("PoblacionId")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("BLOB");

                    b.HasKey("Id");

                    b.HasIndex("ArenalId");

                    b.HasIndex("PoblacionId");

                    b.ToTable("ArenalPoblacion");
                });

            modelBuilder.Entity("Sandwitch.Tier.Entities.Classes.Bandera", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Deleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImageUri")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("BLOB");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("Bandera");
                });

            modelBuilder.Entity("Sandwitch.Tier.Entities.Classes.Historico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("AltaMarAlba")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("AltaMarOcaso")
                        .HasColumnType("TEXT");

                    b.Property<int>("ArenalId")
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("BajaMarAlba")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("BajaMarOcaso")
                        .HasColumnType("TEXT");

                    b.Property<int>("BanderaId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Deleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<double>("Temperatura")
                        .HasColumnType("REAL");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("BLOB");

                    b.HasKey("Id");

                    b.HasIndex("ArenalId");

                    b.HasIndex("BanderaId");

                    b.ToTable("Historico");
                });

            modelBuilder.Entity("Sandwitch.Tier.Entities.Classes.Poblacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Deleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImageUri")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ProvinciaId")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("BLOB");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.HasIndex("ProvinciaId");

                    b.ToTable("Poblacion");
                });

            modelBuilder.Entity("Sandwitch.Tier.Entities.Classes.Provincia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Deleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImageUri")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("BLOB");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("Provincia");
                });

            modelBuilder.Entity("Sandwitch.Tier.Entities.Classes.ArenalPoblacion", b =>
                {
                    b.HasOne("Sandwitch.Tier.Entities.Classes.Arenal", "Arenal")
                        .WithMany("ArenalPoblaciones")
                        .HasForeignKey("ArenalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sandwitch.Tier.Entities.Classes.Poblacion", "Poblacion")
                        .WithMany("ArenalPoblaciones")
                        .HasForeignKey("PoblacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Arenal");

                    b.Navigation("Poblacion");
                });

            modelBuilder.Entity("Sandwitch.Tier.Entities.Classes.Historico", b =>
                {
                    b.HasOne("Sandwitch.Tier.Entities.Classes.Arenal", "Arenal")
                        .WithMany("Historicos")
                        .HasForeignKey("ArenalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sandwitch.Tier.Entities.Classes.Bandera", "Bandera")
                        .WithMany("Historicos")
                        .HasForeignKey("BanderaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Arenal");

                    b.Navigation("Bandera");
                });

            modelBuilder.Entity("Sandwitch.Tier.Entities.Classes.Poblacion", b =>
                {
                    b.HasOne("Sandwitch.Tier.Entities.Classes.Provincia", "Provincia")
                        .WithMany("Poblaciones")
                        .HasForeignKey("ProvinciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provincia");
                });

            modelBuilder.Entity("Sandwitch.Tier.Entities.Classes.Arenal", b =>
                {
                    b.Navigation("ArenalPoblaciones");

                    b.Navigation("Historicos");
                });

            modelBuilder.Entity("Sandwitch.Tier.Entities.Classes.Bandera", b =>
                {
                    b.Navigation("Historicos");
                });

            modelBuilder.Entity("Sandwitch.Tier.Entities.Classes.Poblacion", b =>
                {
                    b.Navigation("ArenalPoblaciones");
                });

            modelBuilder.Entity("Sandwitch.Tier.Entities.Classes.Provincia", b =>
                {
                    b.Navigation("Poblaciones");
                });
#pragma warning restore 612, 618
        }
    }
}
